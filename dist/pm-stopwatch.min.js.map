{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pm-stopwatch.min.js","webpack:///webpack/bootstrap e4febbc83969d3bb80c6","webpack:///./src/index.js","webpack:///./~/Events/events.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_Events","_Events2","startTime","Symbol","stopTime","status","history","setHistory","STATUS","UNSTARTED","RUNNING","STOPPED","Stopwatch","_Events$EventEmitter","_this","getPrototypeOf","message","isStopped","Error","isRunning","currentTime","Date","now","record","emit","Event","START","STOP","RESET","LAP","lapTime","arguments","undefined","type","lapInfo","timestamp","push","get","isStarted","EventEmitter","_events","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","n","isNaN","er","handler","len","args","listeners","error","Array","slice","apply","addListener","listener","newListener","warned","console","trace","on","once","g","removeListener","fired","list","position","splice","removeAllListeners","ret","listenerCount","evlistener","emitter"],"mappings":"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","file":"pm-stopwatch.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PMStopwatch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PMStopwatch\"] = factory();\n\telse\n\t\troot[\"PMStopwatch\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PMStopwatch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PMStopwatch\"] = factory();\n\telse\n\t\troot[\"PMStopwatch\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Events = __webpack_require__(1);\n\t\n\tvar _Events2 = _interopRequireDefault(_Events);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar startTime = Symbol('start_time');\n\tvar stopTime = Symbol('stop_time');\n\tvar status = Symbol('running_status');\n\tvar history = Symbol('history');\n\tvar setHistory = Symbol('set_history');\n\t\n\tvar STATUS = {\n\t  UNSTARTED: Symbol('unstarted'),\n\t  RUNNING: Symbol('running'),\n\t  STOPPED: Symbol('stopped')\n\t};\n\t\n\tvar Stopwatch = function (_Events$EventEmitter) {\n\t  _inherits(Stopwatch, _Events$EventEmitter);\n\t\n\t  function Stopwatch() {\n\t    _classCallCheck(this, Stopwatch);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Stopwatch).call(this));\n\t\n\t    _this[status] = STATUS.UNSTARTED;\n\t    _this[history] = [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Stopwatch, [{\n\t    key: 'start',\n\t    value: function start(message) {\n\t      if (this.isStopped) {\n\t        throw new Error('Stopwatch must be reset before being restarted.');\n\t      }\n\t      if (this.isRunning) {\n\t        throw new Error('Stopwatch is running. You cannot start it again.');\n\t      }\n\t      var currentTime = this[startTime] = this[stopTime] = Date.now();\n\t      var record = this[setHistory](message, currentTime, 'start');\n\t      this[status] = STATUS.RUNNING;\n\t      this.emit(Stopwatch.Event.START, record);\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop(message) {\n\t      if (!this.isRunning) {\n\t        throw new Error('Stopwatch is not running. You cannot stop it.');\n\t      }\n\t      var record = this[setHistory](message, Date.now(), 'stop');\n\t      this[stopTime] = Date.now();\n\t      this[status] = STATUS.STOPPED;\n\t      this.emit(Stopwatch.Event.STOP, record);\n\t      return this[stopTime] - this[startTime];\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this[status] = STATUS.UNSTARTED;\n\t      this[history].length = 0; // fast way to clean array\n\t      this.emit(Stopwatch.Event.RESET);\n\t    }\n\t  }, {\n\t    key: 'lap',\n\t    value: function lap(message) {\n\t      if (!this.isRunning) {\n\t        throw new Error('Stopwatch is not running.');\n\t      }\n\t      var record = this[setHistory](message);\n\t      this.emit(Stopwatch.Event.LAP, record);\n\t      return record.lapTime;\n\t    }\n\t  }, {\n\t    key: setHistory,\n\t    value: function value(message) {\n\t      var currentTime = arguments.length <= 1 || arguments[1] === undefined ? Date.now() : arguments[1];\n\t      var type = arguments.length <= 2 || arguments[2] === undefined ? 'lap' : arguments[2];\n\t\n\t      if (this.isStopped) {\n\t        throw new Error(\"The stopwatch is stopped. You can set history\");\n\t      }\n\t\n\t      var lapInfo = {\n\t        type: type,\n\t        message: message,\n\t        timestamp: currentTime,\n\t        lapTime: currentTime - this[stopTime]\n\t      };\n\t      this[stopTime] = currentTime;\n\t      this[history].push(lapInfo);\n\t      return lapInfo;\n\t    }\n\t  }, {\n\t    key: 'getLapHistory',\n\t    value: function getLapHistory() {\n\t      return this[history];\n\t    }\n\t  }, {\n\t    key: 'displayTime',\n\t    get: function get() {\n\t      if (this.isRunning) {\n\t        return Date.now() - this.startTime;\n\t      } else if (this.isStopped) {\n\t        return this.startTime - this.stopTime;\n\t      } else {\n\t        return 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'startTime',\n\t    get: function get() {\n\t      if (this.isStarted) {\n\t        return this[startTime];\n\t      } else {\n\t        throw new Error('Stopwatch is not running.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'stopTime',\n\t    get: function get() {\n\t      if (this.isStopped) {\n\t        return this[stopTime];\n\t      } else {\n\t        throw new Error('Stopwatch is still running or never run.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isStarted',\n\t    get: function get() {\n\t      return this[status] !== STATUS.UNSTARTED;\n\t    }\n\t  }, {\n\t    key: 'isStopped',\n\t    get: function get() {\n\t      return this[status] === STATUS.STOPPED;\n\t    }\n\t  }, {\n\t    key: 'isRunning',\n\t    get: function get() {\n\t      return this[status] === STATUS.RUNNING;\n\t    }\n\t  }]);\n\t\n\t  return Stopwatch;\n\t}(_Events2.default.EventEmitter);\n\t\n\texports.default = Stopwatch;\n\t\n\t\n\tStopwatch.Event = {\n\t  START: START,\n\t  STOP: STOP,\n\t  LAP: LAP,\n\t  RESET: RESET\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      }\n\t      throw TypeError('Uncaught, unspecified \"error\" event.');\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** pm-stopwatch.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e4febbc83969d3bb80c6\n **/","import Events from 'Events'\n\nconst startTime = Symbol('start_time');\nconst stopTime = Symbol('stop_time');\nconst status = Symbol('running_status');\nconst history = Symbol('history');\nconst setHistory = Symbol('set_history');\n\nconst STATUS = {\n  UNSTARTED: Symbol('unstarted'),\n  RUNNING: Symbol('running'),\n  STOPPED: Symbol('stopped')\n};\n\n\nexport default class Stopwatch extends Events.EventEmitter{\n  constructor() {\n    super();\n    this[status] = STATUS.UNSTARTED;\n    this[history] = [];\n  }\n\n  start(message) {\n    if (this.isStopped) {\n      throw new Error('Stopwatch must be reset before being restarted.');\n    }\n    if (this.isRunning) {\n      throw new Error('Stopwatch is running. You cannot start it again.');\n    }\n    let currentTime = this[startTime] = this[stopTime] = Date.now();\n    let record = this[setHistory](message, currentTime, 'start');\n    this[status] = STATUS.RUNNING;\n    this.emit(Stopwatch.Event.START, record);\n  }\n\n  stop(message) {\n    if (!this.isRunning) {\n      throw new Error('Stopwatch is not running. You cannot stop it.')\n    }\n    let record = this[setHistory](message, Date.now(), 'stop');\n    this[stopTime] = Date.now();\n    this[status] = STATUS.STOPPED;\n    this.emit(Stopwatch.Event.STOP, record);\n    return this[stopTime] - this[startTime];\n  }\n\n  reset() {\n    this[status] = STATUS.UNSTARTED;\n    this[history].length = 0; // fast way to clean array\n    this.emit(Stopwatch.Event.RESET);\n  }\n\n  lap(message){\n    if (!this.isRunning) {\n      throw new Error('Stopwatch is not running.')\n    }\n    let record = this[setHistory](message);\n    this.emit(Stopwatch.Event.LAP, record);\n    return record.lapTime;\n  }\n\n  [setHistory](message, currentTime = Date.now(),type = 'lap'){\n    if(this.isStopped) {\n      throw new Error (\"The stopwatch is stopped. You can set history\");\n    }\n\n    let lapInfo = {\n      type:type,\n      message:message,\n      timestamp : currentTime,\n      lapTime : currentTime - this[stopTime]\n    };\n    this[stopTime] = currentTime;\n    this[history].push(lapInfo);\n    return lapInfo;\n  }\n\n  getLapHistory(){\n    return this[history];\n  }\n\n  get displayTime(){\n    if(this.isRunning){\n      return Date.now() - this.startTime;\n    }else if(this.isStopped) {\n      return this.startTime - this.stopTime;\n    }else{\n      return 0;\n    }\n  }\n\n  get startTime(){\n    if(this.isStarted) {\n      return this[startTime];\n    }else{\n      throw new Error('Stopwatch is not running.');\n    }\n  }\n\n  get stopTime(){\n    if(this.isStopped){\n      return this[stopTime];\n    }else{\n      throw new Error('Stopwatch is still running or never run.')\n    }\n\n  }\n\n  get isStarted(){\n    return this[status] !== STATUS.UNSTARTED;\n  }\n\n  get isStopped(){\n    return this[status] === STATUS.STOPPED;\n  }\n\n  get isRunning(){\n    return this[status] === STATUS.RUNNING;\n  }\n}\n\nStopwatch.Event  = {\n  START,\n  STOP,\n  LAP,\n  RESET\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Events/events.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}