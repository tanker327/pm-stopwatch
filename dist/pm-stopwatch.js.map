{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dc8fbc7bbb5e0a7899cb","webpack:///./src/index.js"],"names":[],"mappings":"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","file":"pm-stopwatch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pm-stopwatch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pm-stopwatch\"] = factory();\n\telse\n\t\troot[\"pm-stopwatch\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap dc8fbc7bbb5e0a7899cb\n **/","const startTime = Symbol('start_imte');\nconst stopTime = Symbol('stop_time');\nconst status = Symbol('running_status');\nconst history = Symbol('history');\nconst setHistory = Symbol('set_history');\n\nconst STATUS = {\n  UNSTARTED: Symbol('unstarted'),\n  RUNNING: Symbol('running'),\n  STOPPED: Symbol('stopped')\n};\n\n\nexport default class Stopwatch {\n  constructor() {\n    this[status] = STATUS.UNSTARTED;\n    this[history] = [];\n  }\n\n  start(message) {\n    if (this.isStopped) {\n      throw new Error('Stopwatch must be reset before being restarted.');\n    }\n    if (this.isRunning) {\n      throw new Error('Stopwatch is running. You cannot start it again.');\n    }\n    let currentTime = this[startTime] = this[stopTime] = Date.now();\n    this[setHistory](message, currentTime);\n    this[status] = STATUS.RUNNING;\n  }\n\n  stop(message) {\n    if (this.isRunning) {\n      throw new Error('Stopwatch is not running. You cannot stop it.')\n    }\n    this[setHistory](message);\n    this[status] = STATUS.STOPPED;\n  }\n\n  reset() {\n    this[status] = STATUS.UNSTARTED;\n    this[history].length = 0; // fast way to clean array\n  }\n\n  lap(message){\n    if (!this.isRunning) {\n      throw new Error('Stopwatch is not running.')\n    }\n    return this[setHistory](message);\n  }\n\n  [setHistory](message, currentTime = Date.now()){\n    if(this.isStopped) {\n      throw new Error (\"The stopwatch is stopped. You can set history\");\n    }\n    let lapInfo = {\n      message:message,\n      timestamp : currentTime,\n      lapTime : currentTime - this[stopTime]\n    };\n    this[history].push(lapInfo);\n    return lapInfo;\n  }\n\n  getHistory(){\n    return this[history];\n  }\n\n  get displayTime(){\n    if(this.isRunning){\n      return Date.now() - this.startTime;\n    }else if(this.isStopped) {\n      return this.startTime - this.stopTime;\n    }else{\n      return 0;\n    }\n  }\n\n  get startTime(){\n    if(this.isStarted) {\n      return this[startTime];\n    }else{\n      throw new Error('Stopwatch is not running.');\n    }\n  }\n\n  get stopTime(){\n    if(this.isStopped){\n      return this[stopTime];\n    }else{\n      throw new Error('Stopwatch is still running or never run.')\n    }\n\n  }\n\n  get isStarted(){\n    return this[status] !== STATUS.UNSTARTED;\n  }\n\n  get isStopped(){\n    return this[status] === STATUS.STOPPED;\n  }\n\n  get isRunning(){\n    return this[status] === STATUS.RUNNING;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}